trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  workingDirectory: 'angular-app'

stages:
  - stage: Build
    jobs:
      - job: BuildJob
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '20.x'
            displayName: 'Install Node.js'

          - script: |
              npm install
              npm run build --prod
            displayName: 'Build the application'
            workingDirectory: $(workingDirectory)

          - script: |
              zip -r $(Build.ArtifactStagingDirectory)/angular-app.zip dist/
            displayName: 'Zip the files'
            workingDirectory: $(workingDirectory)

          - script: |
              ls -alh $(Build.ArtifactStagingDirectory)
            displayName: 'List build artifacts'

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)/angular-app.zip'
              ArtifactName: 'angular-app'
              publishLocation: 'container'
            displayName: 'Create and publish artifact'

  - stage: Deploy
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: DeploymentJob
        environment: 
          name: newtest
          resourceName: newtest
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadPipelineArtifact@2
                  inputs:
                    buildType: 'current'
                    artifactName: 'angular-app'
                    targetPath: '$(Pipeline.Workspace)/artifacts'

                - script: |
                    unzip -o $(Pipeline.Workspace)/artifacts/angular-app.zip -d /var/www/html/
                    sudo chown -R apache:apache /var/www/html
                    sudo chmod -R 777 /var/www/html
                    sudo systemctl restart httpd
                    # Add your specific deployment scripts here, e.g., restart nginx
                  displayName: 'Deploy Application'
